name: CI & Deploy to Render

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Build & Test (Maven)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Run tests
        run: mvn -B -ntp test

  deploy:
    name: Deploy to Render (Clean Build)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    env:
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      CLEAR_CACHE: ${{ secrets.RENDER_CLEAR_CACHE || 'true' }}
      COMMIT_ID: ${{ github.sha }}
    steps:
      - name: Trigger Render deploy (clear build cache)
        id: trigger
        run: |
          set -euo pipefail
          RESP=$(curl -sS -X POST \
            "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d "{\"clearCache\": ${CLEAR_CACHE}, \"commitId\": \"${COMMIT_ID}\"}")
          echo "$RESP"
          DEPLOY_ID=$(echo "$RESP" | jq -r '.id')
          if [ -z "$DEPLOY_ID" ] || [ "$DEPLOY_ID" = "null" ]; then
            echo "Failed to trigger deploy"; exit 1
          fi
          echo "deploy_id=$DEPLOY_ID" >> "$GITHUB_OUTPUT"

      - name: Wait for Render deploy to go live
        id: wait
        run: |
          set -euo pipefail
          service_id="${RENDER_SERVICE_ID}"
          deploy_id="${{ steps.trigger.outputs.deploy_id }}"
          echo "Waiting on deploy: $deploy_id"
          ATTEMPTS=0
          while true; do
            STATUS=$(curl -sS -H "Authorization: Bearer ${RENDER_API_KEY}" \
              "https://api.render.com/v1/services/${service_id}/deploys/${deploy_id}" | jq -r '.status')
            echo "Status: $STATUS"
            case "$STATUS" in
              live)    echo "Deploy is live"; break ;;
              failed)  echo "Deploy failed"; exit 1 ;;
              canceled) echo "Deploy canceled"; exit 1 ;;
              *) sleep 10; ATTEMPTS=$((ATTEMPTS+1)); [ $ATTEMPTS -gt 120 ] && { echo "Timeout waiting for deploy"; exit 1; } ;;
            esac
          done