name: CI & Deploy to Render
on:
  push: { branches: [ main ] }
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17' }
      - run: mvn -B -ntp test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    env:
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      CLEAR_CACHE: ${{ secrets.RENDER_CLEAR_CACHE || 'true' }}
      COMMIT_ID: ${{ github.sha }}
    steps:
      - name: Trigger Render deploy (clean build)
        id: trigger
        run: |
          set -euo pipefail
          resp=$(curl -sS -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" -H "Content-Type: application/json" \
            -d "{\"clearCache\": ${CLEAR_CACHE}, \"commitId\": \"${COMMIT_ID}\"}")
          id=$(echo "$resp" | jq -r '.id'); echo "deploy_id=$id" >> "$GITHUB_OUTPUT"
          [ "$id" = "null" -o -z "$id" ] && { echo "$resp"; exit 1; }

      - name: Wait until Live
        run: |
          set -euo pipefail
          id="${{ steps.trigger.outputs.deploy_id }}"
          for i in {1..120}; do
            st=$(curl -sS -H "Authorization: Bearer ${RENDER_API_KEY}" \
              "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys/$id" | jq -r '.status')
            echo "status=$st"
            case "$st" in live) exit 0;; failed|canceled) exit 1;; esac
            sleep 10
          done
          echo "timeout"; exit 1
